Regarding examples in shrPort library. 

June 8, 2020  G. D. (Joe) Young <jyoung@islandnet.com>
June 22, 2020   add note about jrotaryshr.

As there are a number of similarly-named examples, this note attempts to give
some rationale for each:

flashPinRep - taken from flashPin library examples, modified to use shrPort lib
              object names not altered to match pin numbers

kpdispftest5 - the fifth in a line of progress from kpdispftest which explored
               the combining of Keypad, LiquidCrystal, and flashPin to operate
               from one set of i/o operations on the MCP23017 port expander. 
               The comments give summary info about each step, with number 5
               being a fairly complete example and with an additional keypad
               added on another shrPort.

kpdispftest6 - All of number 5, plus illustrate the use of Keypad to decode a
               rotary encoder. This use of Keypad has the advantage of having
               Keypad's debouncing and making available reporting of detailed
               state of the accompanying push button with the encoder. It may
               be slower than an interrupt-driven decoder.

Multikey_exp - Keypad's Multikey converted to use shrPort

Multikey_exp_encA - As above with encoder strapped to rows 1 and 2, column 4.
               Was meant to show that the keypad could be operated as before,
               but actually illustrates why it cannot -- because with two of
               the rows strapped together with every other encoder detent, the
               two keys in each row of a column are reported as the same key.

Multikey_exp_encB - As above, but with only the encoder being scanned. The
               remaining pins can be used for a 2 X 4 keypad - as illustrated
               with kpdispftest6.

testshrPort - Example from earlier development, shows the bit and port i/o
              functions provided by shrPort for PCF8574 and PCF8575 expanders.

jrotaryshr -  Example of using shrPort alone, and of using the interrupt output
              from the port expander. Has rudimentary debouncing by waiting for
              the debounce time after first interrupt before reading the port
              pins. Also uses the pinChangeInterrupt library to permit assigning
              the expander port interrupt to any pin.


